
# This file was generated by sfood-graph.

strict digraph "dependencies" {
    graph [
        rankdir = "LR",
        overlap = "scale",
        size = "8,10",
        ratio = "fill",
        fontsize = "16",
        fontname = "Helvetica",
        clusterrank = "local"
        ]

       node [
           fontsize=10
           shape=ellipse
           // style=filled
           // shape=box
       ];

"deck.py"  [style=filled];
"deck.py" -> "random.py";
"genetic_algorithm.py"  [style=filled];
"genetic_algorithm.py" -> "texttable.py";
"genetic_algorithm.py" -> "pickle.py";
"genetic_algorithm.py" -> "random.py";
"genetic_algorithm.py" -> "ginmatch.py";
"genetic_algorithm.py" -> "ginstrategy.py";
"genetic_algorithm.py" -> "neuralnet.py";
"genetic_algorithm.py" -> "utility.py";
"gindeck.py"  [style=filled];
"gindeck.py" -> "deck.py";
"ginhand.py"  [style=filled];
"ginhand.py" -> "bisect.py";
"ginhand.py" -> "operator.so";
"ginhand.py" -> "deck.py";
"ginhand.py" -> "gindeck.py";
"ginhand.py" -> "utility.py";
"ginmatch.py"  [style=filled];
"ginmatch.py" -> "random.py";
"ginmatch.py" -> "ginplayer.py";
"ginmatch.py" -> "gintable.py";
"ginmatch.py" -> "utility.py";
"ginplayer.py"  [style=filled];
"ginplayer.py" -> "ginhand.py";
"ginplayer.py" -> "ginstrategy.py";
"ginplayer.py" -> "gintable.py";
"ginplayer.py" -> "observer.py";
"ginstrategy.py"  [style=filled];
"ginstrategy.py" -> "math.so";
"gintable.py"  [style=filled];
"gintable.py" -> "pylru.py";
"gintable.py" -> "gindeck.py";
"gintable.py" -> "ginplayer.py";
"gintable.py" -> "observer.py";
"gintable.py" -> "utility.py";
"neuralnet.py"  [style=filled];
"neuralnet.py" -> "texttable.py";
"neuralnet.py" -> "math.so";
"neuralnet.py" -> "utility.py";
"observer.py"  [style=filled];
"observer.py" -> "uuid.py";
"observer.py" -> "utility.py";
"playground.py"  [style=filled];
"playground.py" -> "signal";
"playground.py" -> "sys";
"playground.py" -> "genetic_algorithm.py";
"playground.py" -> "utility.py";
"test_deck.py"  [style=filled];
"test_deck.py" -> "unittest";
"test_deck.py" -> "operator.so";
"test_deck.py" -> "deck.py";
"test_genetic_algorithm.py"  [style=filled];
"test_genetic_algorithm.py" -> "os.py";
"test_genetic_algorithm.py" -> "unittest";
"test_genetic_algorithm.py" -> "genetic_algorithm.py";
"test_genetic_algorithm.py" -> "utility.py";
"test_gin.py"  [style=filled];
"test_gindeck.py"  [style=filled];
"test_gindeck.py" -> "unittest";
"test_gindeck.py" -> "gindeck.py";
"test_ginhand.py"  [style=filled];
"test_ginhand.py" -> "random.py";
"test_ginhand.py" -> "ginhand.py";
"test_ginhand.py" -> "test_helpers.py";
"test_ginmatch.py"  [style=filled];
"test_ginmatch.py" -> "ginmatch.py";
"test_ginmatch.py" -> "test_ginstrategy.py";
"test_ginmatch.py" -> "test_helpers.py";
"test_ginplayer.py"  [style=filled];
"test_ginplayer.py" -> "unittest";
"test_ginplayer.py" -> "ginmatch.py";
"test_ginplayer.py" -> "test_ginstrategy.py";
"test_ginplayer.py" -> "test_helpers.py";
"test_ginstrategy.py"  [style=filled];
"test_ginstrategy.py" -> "unittest";
"test_ginstrategy.py" -> "ginmatch.py";
"test_ginstrategy.py" -> "ginplayer.py";
"test_ginstrategy.py" -> "ginstrategy.py";
"test_ginstrategy.py" -> "test_helpers.py";
"test_ginstrategy.py" -> "test_neuralnet.py";
"test_gintable.py"  [style=filled];
"test_gintable.py" -> "unittest";
"test_gintable.py" -> "gintable.py";
"test_helpers.py"  [style=filled];
"test_helpers.py" -> "unittest";
"test_helpers.py" -> "ginhand.py";
"test_neuralnet.py"  [style=filled];
"test_neuralnet.py" -> "unittest";
"test_neuralnet.py" -> "genetic_algorithm.py";
"test_neuralnet.py" -> "ginplayer.py";
"test_neuralnet.py" -> "gintable.py";
"test_neuralnet.py" -> "neuralnet.py";
"test_neuralnet.py" -> "observer.py";
"test_observer.py"  [style=filled];
"test_observer.py" -> "unittest";
"test_observer.py" -> "gindeck.py";
"test_observer.py" -> "ginmatch.py";
"test_observer.py" -> "ginplayer.py";
"test_observer.py" -> "observer.py";
"utility.py"  [style=filled];
"utility.py" -> "pylru.py";
"utility.py" -> "functools.py";
"utility.py" -> "gc";
"utility.py" -> "logging";
"utility.py" -> "cPickle.so";
"utility.py" -> "operator.so";


}
